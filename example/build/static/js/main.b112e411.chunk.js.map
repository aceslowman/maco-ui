{"version":3,"sources":["../../src/ThemeContext.js","../../src/PanelComponent.js","../../src/DropDownComponent.js","../../src/SplitContainer.js","../../src/input/InputBool.js","../../src/input/InputFloat.js","../../src/input/InputSlider.js","../../src/index.js","../../src/TextComponent.js","../../src/ToolbarComponent.js","../../src/ControlGroupComponent.js","../../src/input/InputSelect.js","../../src/input/InputColor.js","App.js","index.js"],"names":["themes","primary_color","secondary_color","text_color","accent_color","ThemeContext","createContext","Panel","props","context","useContext","useState","expanded","setExpanded","window","dimensions","setDimensions","position","setPosition","wrapper_element","useRef","dragOffset","setDragOffset","handleResize","e","p_bounds","w","h","handleMove","x","y","handleCenter","main_styling","width","height","left","top","useEffect","ref","className","styles","style","backgroundColor","color","borderColor","onClick","fontSize","onRemove","onFocus","onDragStart","onDrag","onDragEnd","draggable","onRef","PropTypes","toolbar","children","horizontal","vertical","collapsible","fullscreen","floating","bool","drawer","DropDown","mainRef","activeItem","setActiveItem","subDropDownOpen","setSubDropDownOpen","subDropDownItems","setSubDropDownItems","subDropDownPosition","setSubDropDownPosition","item","key","i","index","toggle","parent_bounds","bounds","handleDirClick","float","open","items","SplitContainer","p","Array","split","setSplit","console","s","has_handle","overflow","array","base_value","InputFloat","value","parseFloat","type","step","placeholder","onChange","offset","label","func","slider_bounds","InputSlider","slider_element","v","onMouseDown","min","max","object","TextComponent","PanelComponent","_PanelComponent","ToolbarComponent","dropDownOpen","setDropDownOpen","dropDownItems","setDropDownItems","dropDownPosition","setDropDownPosition","handleClickAway","document","ControlGroupComponent","padding","input_width","React","_SplitContainer","InputBool","checked","_InputFloat","InputSelect","opt","_InputSlider","InputColor","handleChange","_ThemeContext","Themes","App","state","bool_one","float_one","slider_one","color_one","weyland","main_panel_toolbar_1","dropDown","main_panel_toolbar_2","Provider","this","title","name","log","setState","prevState","options","theme","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b112e411.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const themes = {\n    'weyland': { // light\n        primary_color: '#ffffff',\n        secondary_color: '#C2C2C2',\n        text_color: '#000000',\n        accent_color: '#3fa3a3'\n    },\n    'yutani': { // dark\n        primary_color: '#000000',\n        secondary_color: '#202020',\n        text_color: '#ffffff',\n        accent_color: '#3fa3a3'\n    },\n    'powershell': { // blue\n        primary_color: '#012456',\n        secondary_color: '#304E78',\n        text_color: '#ffffff',\n        accent_color: '#ffff00'\n    },\n    'sarah': {\n        primary_color: '#0D5439',\n        secondary_color: '#9D6C71',\n        text_color: '#C9A6A6',\n        accent_color: '#D3945A'\n    },\n};\n\nconst ThemeContext = createContext(themes.weyland)\n\nexport default ThemeContext","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport styles from './PanelComponent.module.css';\nimport ThemeContext from './ThemeContext';\nimport PropTypes from 'prop-types';\n\nconst Panel = (props) => {\n\tconst context = useContext(ThemeContext);\n\tconst [expanded, setExpanded] = useState(true);\n\tconst [dimensions, setDimensions] = useState([window.innerWidth-100, window.innerHeight-100]);\n\tconst [position, setPosition] = useState([100, 100]);\n\n\tconst wrapper_element = useRef(null);\n\n\tconst [dragOffset, setDragOffset] = useState([0,0]);\n\n\tconst handleResize = (e) => {\n\t\t/*\n            conditional fixes issue where last frame of\n            drag results in a 'jump' in value, as pageY\n            is 0. \n        */\n\t\tif (e.pageY) {\n\t\t\tconst p_bounds = wrapper_element.current.getBoundingClientRect();\n\n\t\t\tconst w = (e.pageX) - (p_bounds.x) + 10;\n\t\t\tconst h = (e.pageY) - (p_bounds.y) + 10;\n\n\t\t\tsetDimensions([w, h]);\n\t\t}\n\t}\n\n\tconst handleMoveStart = (e) => {\t\t\n\t\tconst p_bounds = wrapper_element.current.getBoundingClientRect();\n\t\tsetDragOffset([e.pageX - p_bounds.x, e.pageY - p_bounds.y]);\n\t}\n\n\tconst handleMove = (e) => {\n\t\t/*\n            conditional fixes issue where last frame of\n            drag results in a 'jump' in value, as pageY\n            is 0. \n        */\n\t\tif(e.pageY) {\n\t\t\tconst p_bounds = wrapper_element.current.getBoundingClientRect();\n\n\t\t\tconst x = e.pageX-dragOffset[0];\n\t\t\tconst y = e.pageY-dragOffset[1];\n\n\t\t\t// if (x >= 0 && y >= 0) setPosition([x, y])\n\t\t\tsetPosition([x,y])\n\t\t}\t\n\t}\n\n\tconst handleCenter = () => {\n\t\tconst p_bounds = wrapper_element.current.getBoundingClientRect();\n\n\t\tconst x = (window.innerWidth/2) - (p_bounds.width/2);\n\t\tconst y = (window.innerHeight/2) - (p_bounds.height/2);\n\n\t\tsetPosition([x, y]);\n\t}\n\n\tconst handleFullscreen = (e) => {\n\t\tsetPosition([0,0]);\n\t\tsetDimensions([window.innerWidth,window.innerHeight]);\n\t}\n\n\tlet main_styling = {};\n\n\tif(props.floating) {\n\t\tmain_styling = {\n\t\t\twidth: dimensions[0],\n\t\t\theight: dimensions[1],\n\t\t\tleft: position[0],\n\t\t\ttop: position[1],\t\t  \n\t\t}\n\t}\n\n\t// seems like a red flag that its triggering so often\n\n\tuseEffect(()=>{\n\t\thandleCenter()\n\t},[])\n\n\treturn (\n\t\t<div \t\n\t\t\tref={wrapper_element}\t\t\t\n\t\t\tclassName={`${styles.panel} ${props.fullscreen ? styles.fullscreen : ''} ${props.floating ? styles.floating : ''}`}\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: context.primary_color || 'black',\n\t\t\t\tcolor: context.text_color || 'white',\n\t\t\t\tborderColor: context.text_color,\n\t\t\t\t...main_styling,\n\t\t\t}}\n\t\t>\n\t\t\t{ (props.title || props.onRemove || props.collapsible || props.floating) && (\n\t\t\t\t<div \n\t\t\t\t\tclassName={styles.title_bar} \n\t\t\t\t>\n\n\t\t\t\t\t{props.floating && (\n\t\t\t\t\t\t<React.Fragment>\t\t\n\t\t\t\t\t\t\t{/* <button \n\t\t\t\t\t\t\t\tclassName={styles.moveIcon}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize:'1em'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t✥\n\t\t\t\t\t\t\t</button> */}\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tonClick={handleCenter}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize:'1.3em',\n\t\t\t\t\t\t\t\t\t// marginTop:'-4px',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t⧈\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tonClick={handleFullscreen}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize:'1.3em',\n\t\t\t\t\t\t\t\t\t// marginTop:'-4px',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t⧆\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</React.Fragment>\t\t\t\t\t\t\n\t\t\t\t\t)}\n\n\t\t\t\t\t{ props.onRemove && (\n\t\t\t\t\t\t<button onClick={props.onRemove}>\n\t\t\t\t\t\t\tx\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ props.collapsible && (\n\t\t\t\t\t\t<button onClick={()=>setExpanded(!expanded)}>\n\t\t\t\t\t\t\t{ props.horizontal \n\t\t\t\t\t\t\t\t&& (expanded ? '↤' : '↦') }\n\t\t\t\t\t\t\t{ props.vertical \n\t\t\t\t\t\t\t\t&& (expanded ? '↥' : '↧') }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<legend onClick={props.onFocus}> \n\t\t\t\t\t\t<strong>{props.title}</strong>\n\t\t\t\t\t</legend>\n\n\t\t\t\t\t{props.floating && (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclassName={styles.moveHandle}\n\t\t\t\t\t\t\tonDragStart={handleMoveStart}\n\t\t\t\t\t\t\tonDrag={handleMove}\n\t\t\t\t\t\t\tonDragEnd={handleMove}\n\t\t\t\t\t\t\tdraggable\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t                    \n\t\t\t{expanded && props.toolbar}\n\n\t\t\t{expanded && (\t\t\t\n\t\t\t\t<div \n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderColor: context.text_color,\n\t\t\t\t\t}} \n\t\t\t\t\tclassName={`${styles.panel_content} ${props.horizontal ? styles.horizontal : ''} ${props.vertical ? styles.vertical : ''}`} \n\t\t\t\t\tref={props.onRef}\n\t\t\t\t>\n\t\t\t\t\t{props.children}\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* visible resize handle */}\n\t\t\t{props.floating && (\n\t\t\t\t<div \n\t\t\t\t\tclassName={styles.resizeHandleVisible}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...props.style,\n\t\t\t\t\t\tborderColor: context.text_color,\n\t\t\t\t\t}} \n\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* \n\t\t\t\tinvisible resize handle \n\n\t\t\t\tresolves issue where dragged \n\t\t\t\telement shows underneath the \n\t\t\t\tcursor\n\t\t\t*/}\n\t\t\t{props.floating && (\n\t\t\t\t<div \n\t\t\t\t\tclassName={styles.resizeHandle}\n\t\t\t\t\tonDrag={handleResize}\n\t\t\t\t\tonDragEnd={handleResize}\n\t\t\t\t\tdraggable\n\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t\n\t\t</div>\n\t);\n}\n\nPanel.propTypes = {\n  onRemove: PropTypes.func,\n  onFocus: PropTypes.func,\n  onRef: PropTypes.element,\n\n  toolbar: PropTypes.object,\n\n  children: PropTypes.any,\n  style: PropTypes.object,\n//   title: PropTypes.string || PropTypes.object,\n\n  horizontal: PropTypes.bool,\n  vertical: PropTypes.bool,\n\n  collapsible: PropTypes.bool,\n  fullscreen: PropTypes.bool,\n  floating: PropTypes.bool,\n}\n\nexport default Panel;","import React, { useState, useContext, useRef } from 'react';\nimport ThemeContext from './ThemeContext';\nimport styles from './DropDownComponent.module.css';\n\nlet style = {\n    drawer: {\n        width: \"0px\",\n        top: \"0px\",\n        left: \"0px\",\n    }\n}\n\nconst DropDown = (props) => {\n    const context = useContext(ThemeContext);\n    const mainRef = useRef(null);\n\n    const [activeItem, setActiveItem] = useState(null);\n    const [subDropDownOpen, setSubDropDownOpen] = useState(false);\n    const [subDropDownItems, setSubDropDownItems] = useState(null);\n    const [subDropDownPosition, setSubDropDownPosition] = useState({top:0,left:0});\n\n    const handleDirClick = (e, index, item) => {\n        let toggle = index === activeItem ? !prevsubDropDownOpen : true;\n\n        let parent_bounds = mainRef.current.getBoundingClientRect();\n        let bounds = e.getBoundingClientRect();\n\n        setActiveItem(toggle ? index : null);\n        setSubDropDownItems(item.items);\n        setSubDropDownOpen(toggle);\n        setSubDropDownPosition({\n            // top: parent_bounds.y, // snap child to top of dropdown\n            top: bounds.y,            \n            left: parent_bounds.x + bounds.width\n        });\n    }\n\n    const handleClickAway = e => {\n        if (!mainRef.current.contains(e.target)) {\n            setActiveItem(null);\n            setSubDropDownOpen(false);\n        }\n    }\n\n    style = {\n      ...style,\n      drawer: {\n        width: props.open ? '150px' : '0px',\n        top: props.position.top,\n        left: props.position.left\n      }\n    };\n\n    return(\n        <div \n            className={styles.drawer}\n            style={{\n                ...style.drawer,\n                backgroundColor: context.secondary_color,\n                color: context.text_color\n            }}\n            ref={mainRef}\n        >\t\t\t\n            {props.items && props.items.map((item,i)=>{                \n                if(item._isDirectory) {         \n                    return (\n                        <React.Fragment key={i}>\n                            <button\n                                key={i}\n                                className={i === activeItem ? styles.activeButton : ''}\n                                onClick={e=>handleDirClick(e.target,i,item)}\n                            >\n                                {item.label} \n                                <span style={{float:'right'}}>{'>'}</span>\n                            </button>\n                            <DropDownComponent \n                                key={i+'dd'}\n                                open={props.open && subDropDownOpen}                                    \n                                items={subDropDownItems}\n                                position={subDropDownPosition}                                    \n                            />\n                        </React.Fragment>                            \n                    )\n                }else{\n                    return (\n                        <button\n                            key={i}                            \n                            onClick={item.onClick}\n                        >\n                            {item.label}\n                        </button>\n                    )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default DropDown;","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport styles from './SplitContainer.module.css';\nimport ThemeContext from './ThemeContext';\nimport PropTypes from 'prop-types';\n\nconst SplitContainer = (props) => {\n    const context = useContext(ThemeContext);\n\n    const [split, setSplit] = useState(() => {\n        let p = 100.0 / props.children.length;\n        return new Array(props.children.length - 1).fill(p)\n    });\n\n    const wrapper_element = useRef(null);\n\n    const handleResize = (e,i) => {\n        console.log('split '+i,split)\n\t\tif (e.pageX) {\n            const p_bounds = wrapper_element.current.getBoundingClientRect();\n            \n            let s = (e.pageX - p_bounds.x) / p_bounds.width;\n\n            split[i] = s * 100 - (i > 0 ? split[i - 1] : 0);\n\n            setSplit([...split]);\n\t\t}\n    }\n\n    return (\n        <div \n            className={styles.wrapper}\n            ref={wrapper_element}\n        >\n            {React.Children.map(props.children, (child,i) => {\n                let has_handle = i < props.children.length-1;\n                let w = split[i];\n\n                if(i==props.children.length-1) {\n                    // sum all splits and get the final panel width\n                    w = 100 - split.reduce((x, y) => x + y);\n                }\n                \n                return (\n                    <React.Fragment>\n                        <div style={{\n                            width: w + '%',\n                            overflow: 'auto'\n                        }}>\n                            {child}                        \n                        </div>\n                        {has_handle && (\n                            <div \n                                className={styles.drag_container}\n                                style={{\n                                    backgroundColor: context.accent_color,\n                                    borderColor: context.text_color\n                                }}\n                            >\n                                <div \n                                    className={styles.drag_handle}\n                                    onDrag={(e)=>handleResize(e,i)}\n                                    onDragEnd={(e)=>handleResize(e,i)}\n                                    draggable\n                                ></div>\n                            </div>\n                        )}\n                    </React.Fragment>                    \n                );\n            })}\n        </div>\n    );\n}\n\nSplitContainer.propTypes = {\n    children: PropTypes.any.isRequired,\n    horizontal: PropTypes.bool,\n    vertical: PropTypes.bool,\n    split: PropTypes.array\n}\n\nexport default SplitContainer;","import React from 'react';\nimport styles from './InputBool.module.css';\n\nconst InputBool = (props) => {    \n    const updateValue = e => props.onChange(e.target.checked, e.target.value);\n\n    return (\n        <input \n            style={props.style}\n            type=\"checkbox\"         \n            value={props.value}\n            checked={props.checked}\n            onChange={updateValue}\n        />\n    );\n}\n\nexport default InputBool;","import React, { useContext } from 'react';\nimport styles from './InputFloat.module.css';\nimport ThemeContext from '../ThemeContext';\nimport PropTypes from 'prop-types';\n\nlet position = [0, 0];\nlet base_value = 0;\n\nconst InputFloat = (props) => {\n    const context = useContext(ThemeContext);\n\n    const handleChange = e => props.onChange(e.target.value);\n\n    const handleDragStart = e => {\n        position = [e.pageX, e.pageY];\n        base_value = props.value;\n    }\n\n    const handleDrag = e => {\n        /*\n            conditional fixes issue where last frame of\n            drag results in a 'jump' in value, as pageY\n            is 0. \n        */\n        if(e.pageY) {\n            let offset = (position[1] - e.pageY) * 0.001;\n            props.onChange(base_value + offset)  \n        }           \n    }\n\n    const handleDragEnd = e => {\n        let offset = (position[1] - e.pageY) * 0.001;\n        props.onChange(base_value + offset)      \n    }\n\n    const value = parseFloat(props.value).toFixed(2);\n\n    return (\n        <div \n            className={styles.wrapper}\n            style={{\n                ...props.style,\n                // backgroundColor: context.text_color,\n                // color: context.primary_color\n            }}\n        >\n            {props.label && (\n                <label\n                    style={{\n                        backgroundColor: context.text_color,\n                        color: context.primary_color\n                    }}\n                >\n                    {props.label}:\n                </label>\n            )}\n            <div\n                className={styles.wrapper_inner}\n            >\n                <input                 \n                    type=\"number\" \n                    step={props.step}\n                    placeholder={props.name}\n                    value={value}                    \n                    onChange={handleChange}  \n                    style={{\n                        backgroundColor: context.secondary_color,\n                        color: context.text_color\n                    }}                  \n                />   \n                <div \n                    className={styles.dragOverlay}\n                    onClick={props.onClick}\n                    onDrag={handleDrag}\n                    onDragStart={handleDragStart}\n                    onDragEnd={handleDragEnd}                \n                    draggable\n                ></div> \n            </div>                                                           \n        </div>\n    );\n}\n\nInputFloat.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.number,\n  step: PropTypes.number,\n  onChange: PropTypes.func\n}\n\nexport default InputFloat;\n","import React, { useContext, useRef } from 'react';\nimport styles from './InputSlider.module.css';\nimport InputFloat from './InputFloat';\nimport ThemeContext from '../ThemeContext';\nimport PropTypes from 'prop-types';\n\nlet slider_bounds = null;   \nlet base_value = 0;\n    \nconst InputSlider = (props) => {\n    const context = useContext(ThemeContext);\n\n    const slider_element = useRef(null);\n\n    const handleMouseDown = e => {\n        slider_bounds = slider_element.current.getBoundingClientRect();\n        let x = e.pageX + 5;\n        let position = (x - slider_bounds.x) / slider_bounds.width;\n\n        let value = (position * props.max) + props.min;\n\n        if (position >= 0.00 && position <= 1.0) {\n          props.onChange(value)\n        }\n    }  \n\n    const handleDragStart = e => {\n        slider_bounds = slider_element.current.getBoundingClientRect();\n        base_value = props.value;\n    }\n\n    const handleDrag = e => {\n        /*\n            conditional fixes issue where last frame of\n            drag results in a 'jump' in value, as pageY\n            is 0. \n        */\n        if(e.pageY) {\n            let x = e.pageX + 5;\n            let position = (x - slider_bounds.x) / slider_bounds.width;\n\n            let value = (position * props.max) + props.min;\n\n            if (position <= 0.00) value = props.min\n            if (position >= 1.00) value = props.max\n\n            props.onChange(value)\n        }\n    }\n\n    const handleDragEnd = e => {\n        let x = e.pageX + 5;\n        let position = (x - slider_bounds.x) / slider_bounds.width;\n        let value = (position * props.max) + props.min;\n\n        if (position >= 0.00 && position <= 1.0) {\n          props.onChange(value)\n        }\n    }\n\n    const handleFloatDrag = v => {\n        props.onChange(v)\n    }\n\n    return (\n        <div \n            className={styles.wrapper + ' ' + styles.horizontal}\n            style={props.style}\n        >\n            <InputFloat \n                value={props.value}\n                onChange={handleFloatDrag}\n            />\n            <div \n                ref={slider_element}\t\t\t\n                className={styles.slider_track}    \n                onMouseDown={handleMouseDown}  \n                style={{\n                    backgroundColor: context.secondary_color\n                }}                        \n            >\n                <div \n                    className={styles.sleeve}\n                    style={{\n                        width: props.value + '%',\n                        backgroundColor: context.accent_color\n                    }}\n                >                        \n                </div>\n                <div\n                    className={styles.handle}\n                    style={{\n                        left: props.value + '%',\n                        backgroundColor: context.accent_color\n                    }}\n                    onDragStart={handleDragStart}\n                    onDrag={handleDrag}\n                    onDragEnd={handleDragEnd}  \n                    draggable\n                ></div>                        \n            </div>                                               \n        </div>\n    );\n}\n\nInputSlider.propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    value: PropTypes.number,\n    style: PropTypes.object,\n}\n\nexport default InputSlider;","import _PanelComponent from './PanelComponent';\nimport _TextComponent from './TextComponent';\nimport _ToolbarComponent from './ToolbarComponent';\nimport _ControlGroupComponent from './ControlGroupComponent';\nimport _SplitContainer from './SplitContainer';\n\nimport _InputBool from './input/InputBool';\nimport _InputFloat from './input/InputFloat';\nimport _InputSelect from './input/InputSelect';\nimport _InputSlider from './input/InputSlider';\nimport _InputColor from './input/InputColor';\n\nimport _ThemeContext from './ThemeContext';\nimport { themes } from './ThemeContext';\n\nexport let TextComponent = _TextComponent;\nexport let PanelComponent = _PanelComponent;\nexport let ToolbarComponent = _ToolbarComponent;\nexport let ControlGroupComponent = _ControlGroupComponent;\nexport let SplitContainer = _SplitContainer;\n\nexport let InputBool = _InputBool;\nexport let InputFloat = _InputFloat;\nexport let InputSelect = _InputSelect;\nexport let InputSlider = _InputSlider;\nexport let InputColor = _InputColor;\n\nexport let ThemeContext = _ThemeContext;\nexport let Themes = themes;\n","import React from 'react';\nimport styles from './TextComponent.module.css';\n\nconst Text = (props) => {\n\treturn(\n\t\t<div className={styles.text}>\n\t\t\t{props.children}\n\t\t</div>\t\n\t)\n}\n\nexport default Text;","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport styles from './ToolbarComponent.module.css';\nimport ThemeContext from './ThemeContext';\nimport DropDownComponent from './DropDownComponent';\n\nconst Toolbar = (props) => {\n    const context = useContext(ThemeContext);\n    const mainRef = useRef(null); \n\n    const [activeItem, setActiveItem] = useState(null);\n    const [dropDownOpen, setDropDownOpen] = useState(false);\n    const [dropDownItems, setDropDownItems] = useState(null);\n    const [dropDownPosition, setDropDownPosition] = useState({top:0,left:0});\n\n    const handleClickAway = (e) => {\n      if (mainRef.current && !mainRef.current.contains(e.target)) {\n        setActiveItem(null);\n        setDropDownOpen(false);\n      }\n    }\n\n    useEffect(()=>{\n        document.addEventListener('click', (e) => handleClickAway(e));\n\n        return (document.removeEventListener('click', (e) => handleClickAway(e)));\n    });\n\n    return (\n        <div \n            className={styles.toolbar}\n            ref={mainRef}\n            style={{\n                backgroundColor: context.secondary_color || 'black',\n                color: context.text_color || 'white',\n            }}\n        >\n            {props.items && props.items.map((item,i)=>{\n                return (\n                    <button\n                        key={i}\n                        className={i === activeItem ? styles.activeButton : styles.button}\n                        onClick={(e)=>{\n                            let toggle = i === activeItem ? !dropDownOpen : true;\n\n                            // let parent_bounds = mainRef.current.getBoundingClientRect();\n                            let bounds = e.currentTarget.getBoundingClientRect();\n\n                            setActiveItem(toggle ? i : null);\n                            setDropDownOpen(toggle);\n                            setDropDownItems(item.dropDown);\n                            setDropDownPosition({\n                                top: bounds.y + bounds.height,\n                                left: bounds.x\n                            });\n                        }}\n                    >\n                        {item.label}   \n                        {item.dropDown && (<span className={styles.itemDecoration}>▾</span>)}                         \n                    </button>\n                )\n            })}\n\n            {/*            \n                currently the toolbar owns a single dropdown.\n                \n                I see an alternative in using a single dropdown\n                at the root component, but that would not allow\n                multiple concurrent dropdowns, not sure if it's\n                preferable yet.\n            */}\n            <DropDownComponent \n                open={dropDownOpen}                                    \n                items={dropDownItems}\n                position={dropDownPosition}\n            />\n        </div>  \n    );\n}\n\nexport default Toolbar;","import React, { useContext } from 'react';\nimport styles from './ControlGroupComponent.module.css';\nimport ThemeContext from './ThemeContext';\n\nconst ControlGroup = (props) => {\n    const context = useContext(ThemeContext);\n\n    return (\n        <div className={styles.wrapper}>\n            <fieldset\n                style={{\n                    borderColor: context.text_color\n                }}\n            >                \n                <legend\n                    style={{ \n                        padding: '2px 4px',\n                        backgroundColor: context.text_color,\n                        color: context.primary_color\n                    }}\n                >\n                    <strong>{props.name}</strong>\n                </legend>                    \n                <div>\n                    {React.Children.map(props.children,(child)=>{\n                        let input_width = 100.0;\n\n                        if(props.children.length) {\n                            input_width = 100.0 / props.children.length;\n                        }\n                        \n                        if (React.isValidElement(child)) {\n                            return React.cloneElement(child, { style: {width:`${input_width}%`} })\n                        }\n\n                        return child;\n                    })}\n                </div>                    \n            </fieldset>  \n        </div>          \n    );\n}\n\nexport default ControlGroup;","import React, { useContext } from 'react';\nimport styles from './InputSelect.module.css';\nimport ThemeContext from '../ThemeContext';\n\nconst InputSelect = (props) => {\n    const context = useContext(ThemeContext);\n\n    const handleChange = e => props.onChange(e.target.value);\n\n    return (\n        <div \n            className={styles.wrapper}\n            style={props.style}\n        >\n            <select onChange={handleChange}>\n                {props.options.map((opt,i)=>(\n                    <option key={i} value={opt.value}>\n                        {opt.label}\n                    </option> \n                ))}                   \n            </select>                                                \n        </div>\n    );\n}\n\nexport default InputSelect;\n","import React, { useContext } from 'react';\nimport styles from './InputColor.module.css';\nimport ThemeContext from '../ThemeContext';\n\nconst InputColor = (props) => {\n    const context = useContext(ThemeContext);\n\n    const handleChange = (e) => props.onChange(e.target.value);\n\n    return (\n        <div \n            className={styles.wrapper}\n            style={props.style}\n        >\n            \n            {props.showValue && (\n                <input \n                    type=\"string\"\n                    className={styles.textInput}\n                    value={props.value}\n                    onChange={handleChange}\n                    style={{\n                        backgroundColor: context.text_color,\n                        color: context.secondary_color\n                    }}\n                />                     \n            )}   \n\n            <div className={styles.inner_wrapper}>\n                {props.label && (\n                    <label>{props.label}</label>\n                )}\n                <input \n                    className={styles.colorInput}\n                    type=\"color\"\n                    value={props.value}\n                    onChange={handleChange}\n                    style={{\n                        backgroundColor: context.text_color,\n                        color: context.secondary_color                        \n                    }}\n                /> \n            </div>\n                                                                    \n        </div>\n    );\n}\n\nexport default InputColor;","import React from 'react';\n\nimport { \n  PanelComponent, \n  TextComponent, \n  ToolbarComponent, \n  InputBool, \n  InputFloat,\n  InputSelect,\n  InputSlider,\n  InputColor,\n  ControlGroupComponent, \n  SplitContainer, \n  ThemeContext,\n  Themes\n} from 'maco-ui';\n\nimport 'maco-ui/dist/index.css';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      bool_one: true,\n      float_one: 2,\n      slider_one: 40,\n      color_one: \"#e66865\",\n      ...Themes.weyland\n    }\n  }\n\n  render(){\n    const main_panel_toolbar_1 = (\n      <ToolbarComponent\n        items = {\n          [{\n              label: 'item 1',\n              dropDown: [{\n                  label: 'dropdown 1'\n                },\n                {\n                  label: 'dropdown 2',\n                  dropDown: [{\n                      label: 'dropdown 1'\n                    },\n                    {\n                      label: 'dropdown 2'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              label: 'item 2'\n            },\n            {\n              label: 'item 3'\n            },\n          ]\n        }\n      />\n    );\n\n    const main_panel_toolbar_2 = (\n      <ToolbarComponent\n        items = {\n          [{\n              label: 'item 1',\n              dropDown: [{\n                  label: 'dropdown 1'\n                },\n                {\n                  label: 'dropdown 2',\n                  dropDown: [{\n                      label: 'dropdown 1'\n                    },\n                    {\n                      label: 'dropdown 2'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              label: 'item 2'\n            },\n            {\n              label: 'item 3'\n            },\n          ]\n        }\n      />\n    );\n\n    return (\n      <ThemeContext.Provider \n        value={{\n          primary_color: this.state.primary_color,\n          secondary_color: this.state.secondary_color,\n          text_color: this.state.text_color,\n          accent_color: this.state.accent_color\n        }}\n      >          \n        <PanelComponent\n          title={(<h1>maco-ui</h1>)}\n          horizontal \n          fullscreen\n          floating\n          toolbar={main_panel_toolbar_1}\n        >\n          <SplitContainer horizontal>\n\n            <PanelComponent \n              title=\"Main\"\n              collapsible\n              vertical\n              toolbar={main_panel_toolbar_2}\n            >\n              <TextComponent>\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                  sed do eiusmod tempor incididunt ut labore et dolore magna \n                  aliqua.Ut enim ad minim veniam, quis nostrud exercitation \n                  ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                  Duis aute irure dolor in reprehenderit in voluptate velit \n                  esse cillum dolore eu fugiat nulla pariatur.Excepteur sint \n                  occaecat cupidatat non proident, sunt in culpa qui officia \n                  deserunt mollit anim id est laborum.\n                </p>                \n              </TextComponent>\n\n              <ControlGroupComponent name=\"input group\">\n                <InputBool \n                  checked={this.state.bool_one}\n                  value={'something'}\n                  onChange={(checked,value)=>{\n                    console.log('value',value)\n                    this.setState(prevState=>({\n                      ...prevState,\n                      bool_one: checked\n                    }))\n                  }}\n                />\n                <InputFloat \n                  label=\"x\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n              </ControlGroupComponent>\n\n              <ControlGroupComponent name=\"vector2\">\n                <InputFloat \n                  label=\"one\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n                <InputFloat \n                  label=\"two\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n              </ControlGroupComponent>\n\n              <ControlGroupComponent name=\"vector3\">\n                <InputFloat \n                  label=\"x\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n                <InputFloat \n                  label=\"y\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n                <InputFloat \n                  label=\"z\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n              </ControlGroupComponent>\n\n              <ControlGroupComponent name=\"vector4\">\n                <InputFloat \n                  label=\"r\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n                <InputFloat \n                  label=\"g\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n                <InputFloat \n                  label=\"b\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n                <InputFloat \n                  label=\"a\"\n                  value={this.state.float_one}\n                  step={1}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      float_one: value\n                    }))\n                  }}           \n                />\n              </ControlGroupComponent>\n\n              <ControlGroupComponent name=\"slider\">\n                <InputSlider \n                  value={this.state.slider_one}\n                  step={1}\n                  min={-2}\n                  max={100}\n                  onChange={(value)=>{\n                    this.setState(prevState=>({\n                      ...prevState,\n                      slider_one: value\n                    }))\n                  }}           \n                />\n              </ControlGroupComponent>\n\n              <ControlGroupComponent name=\"color\">\n                  <InputColor \n                    value={this.state.color_one}\n                    onChange={(value)=>{\n                      this.setState(prevState => ({\n                        ...prevState,\n                        color_one: value\n                      }))\n                    }}\n                  />\n              </ControlGroupComponent>\n              \n            </PanelComponent>\n\n            <PanelComponent \n              onRemove={()=>console.log('remove')}\n              title=\"Color Scheme\"\t  \n              collapsible    \n              vertical    \n            >\n              <TextComponent>\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                  sed do eiusmod tempor incididunt ut labore et dolore magna\n                  aliqua.Sapien eget mi proin sed libero.Malesuada fames ac\n                  turpis egestas maecenas pharetra.Ultricies lacus sed turpis\n                  tincidunt id aliquet risus feugiat in .Nec tincidunt\n                  praesent semper feugiat.Et netus et malesuada fames ac\n                </p>\n                \n                <p>\n                  turpis egestas maecenas pharetra.Ut tellus elementum\n                  sagittis vitae et leo.Tempus egestas sed sed risus pretium\n                  quam vulputate.Cras ornare arcu dui vivamus arcu.Sodales\n                  ut etiam sit amet nisl purus in .Lacus sed viverra tellus in .Sed libero enim sed faucibus.Enim nunc faucibus a\n                  pellentesque sit amet porttitor.Amet volutpat consequat\n                  mauris nunc congue.Eu nisl nunc mi ipsum faucibus vitae aliquet.\n                  Risus quis varius quam quisque id diam vel quam.Integer enim\n                  neque volutpat ac tincidunt.Varius morbi enim nunc faucibus a\n                  pellentesque sit amet.Id ornare arcu odio ut sem.Lacinia quis\n                  vel eros donec ac odio tempor orci.\n                </p>\n              </TextComponent>\n\n              <ControlGroupComponent name=\"theme\">\n                <InputSelect\n                  options={[\n                    {label: 'weyland', value: 'weyland'},\n                    {label: 'yutani', value: 'yutani'},\n                    {label: 'powershell', value: 'powershell'},\n                    {label: 'sarah', value: 'sarah'},\n                  ]}\n                  onChange={(theme)=>{\n                    this.setState(prevState => ({\n                      ...prevState,\n                      ...Themes[theme]\n                    }))\n                  }}\n                />\n              </ControlGroupComponent>\n\n              <PanelComponent \n                title=\"Inner Panel\"\n                collapsible\n                vertical\n              >\n                  <ControlGroupComponent name=\"color\">\n                    <InputColor \n                      // showValue\n                      label=\"primary\"\n                      value={this.state.primary_color}\n                      onChange={(value)=>{\n                        this.setState(prevState => ({\n                          ...prevState,\n                          primary_color: value\n                        }))\n                      }}\n                    />\n                    <InputColor \n                      // showValue\n                      label=\"secondary\"\n                      value={this.state.secondary_color}\n                      onChange={(value)=>{\n                        this.setState(prevState => ({\n                          ...prevState,\n                          secondary_color: value\n                        }))\n                      }}\n                    />\n                    <InputColor \n                      // showValue\n                      label=\"text\"\n                      value={this.state.text_color}\n                      onChange={(value)=>{\n                        this.setState(prevState => ({\n                          ...prevState,\n                          text_color: value\n                        }))\n                      }}\n                    />\n                    <InputColor \n                      // showValue\n                      label=\"accent\"\n                      value={this.state.accent_color}\n                      onChange={(value)=>{\n                        this.setState(prevState => ({\n                          ...prevState,\n                          accent_color: value\n                        }))\n                      }}\n                    />\n                  </ControlGroupComponent>\n                </PanelComponent>\n              </PanelComponent>\n\n              <PanelComponent \n                onRemove={()=>console.log('remove')}\n                title=\"Color Scheme\"\t  \n                collapsible    \n                vertical    \n              >\n                <TextComponent>\n                  <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna\n                    aliqua.Sapien eget mi proin sed libero.Malesuada fames ac\n                    turpis egestas maecenas pharetra.Ultricies lacus sed turpis\n                    tincidunt id aliquet risus feugiat in .Nec tincidunt\n                    praesent semper feugiat.Et netus et malesuada fames ac\n                  </p>\n                </TextComponent>\n              </PanelComponent>\n          </SplitContainer>\n        </PanelComponent>\n      </ThemeContext.Provider>\n        \n      )    \n  }\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}